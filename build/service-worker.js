"use strict";var precacheConfig=[["./index.html","9a79974ed9aecf3230bea6ad542ccc44"],["./static/css/main.1566c9ed.css","9c96bc36be6030672b6f903689c9c145"],["./static/js/main.093fb668.js","35bb58bf66a17da4bc8190e630d04606"],["./static/media/barchart-icon.65af2873.svg","65af28737f1c4bb4ef434a24df68ae20"],["./static/media/bubblechart-icon.dd258259.svg","dd258259a3a7574c3348edd56871ce7e"],["./static/media/clock-date-icon.7b65c9d5.svg","7b65c9d5c1d56e23fb0f33309ea3e3cd"],["./static/media/deti_logo.1420ad04.png","1420ad04694869347b5ee7cc37ea3057"],["./static/media/downred.67a03796.svg","67a037968996430529523dbf898d08d1"],["./static/media/equalIcon.d6e57668.svg","d6e576683b49e717b7e6f59470733ccc"],["./static/media/gauge-icon.cd599cfc.svg","cd599cfcb48b723a8bbb23a09eebd141"],["./static/media/linechart-icon.bda58191.svg","bda5819170035c9f3c184a1076b63849"],["./static/media/new_logo.e620418e.svg","e620418edbd8ea79d975b82cd794f22f"],["./static/media/note-icon.670a0e6b.svg","670a0e6b01d075e32ee5a64a104681fb"],["./static/media/nucleo-outline.22a0bffe.ttf","22a0bffe789c286a9d78eb52670996a7"],["./static/media/nucleo-outline.24e2d6b4.woff","24e2d6b43b1b0f84fdfaa06a4032f154"],["./static/media/nucleo-outline.53a1bed7.eot","53a1bed7a3ec86d010fe100873828a89"],["./static/media/nucleo-outline.8ebec31f.woff2","8ebec31f5ce59f908db84d86aed5947f"],["./static/media/piechart-icon.cbd744c9.svg","cbd744c9777c380e4482c2e0bf678495"],["./static/media/settings-icon.e95eae30.svg","e95eae308ba08251dab9561215c8349b"],["./static/media/updown.03809b95.svg","03809b95f8dbf45f0adb81779b815cd7"],["./static/media/upgreen.7abd2cdd.svg","7abd2cdde03c80287c95d436284e39cc"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),c=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var c="./index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(c,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});